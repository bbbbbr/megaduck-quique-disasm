
; System
; - Used for a lot of input handling
; - These are primarily read from the variable at RAM D025
; - The values have been translated by the system rom from the raw keycode data
;
; - ON key seems masked out
; - Caps Lock and shift are handled during the translation, uppercase A-Z are (-0x40) vs lowercase a-z



; RX Byte 3 Flags
; All valid keys seem to have bit 7 set (0x80+)
DEF SYS_CHAR_LETTERS_BASE_BIT       EQU 7
DEF SYS_CHAR_A_TO_Z_LOWER_CASE_BIT  EQU 5  ; Set if lower-case, cleared if upper-case


; Piano Keys  0x00 - 0x17
DEF SYS_CHAR_PIANO_DO          EQU  $00
DEF SYS_CHAR_PIANO_DO_SHARP    EQU  $01
DEF SYS_CHAR_PIANO_RE          EQU  $02
DEF SYS_CHAR_PIANO_RE_SHARP    EQU  $03
DEF SYS_CHAR_PIANO_MI          EQU  $04
DEF SYS_CHAR_PIANO_FA          EQU  $05
DEF SYS_CHAR_PIANO_FA_SHARP    EQU  $06
DEF SYS_CHAR_PIANO_SOL         EQU  $07
DEF SYS_CHAR_PIANO_SOL_SHARP   EQU  $08
DEF SYS_CHAR_PIANO_LA          EQU  $09
DEF SYS_CHAR_PIANO_LA_SHARP    EQU  $0A
DEF SYS_CHAR_PIANO_SI          EQU  $0B
DEF SYS_CHAR_PIANO_DO_2        EQU  $0C
DEF SYS_CHAR_PIANO_DO_2_SHARP  EQU  $0D
DEF SYS_CHAR_PIANO_RE_2        EQU  $0E
DEF SYS_CHAR_PIANO_RE_2_SHARP  EQU  $0F
DEF SYS_CHAR_PIANO_MI_2        EQU  $10
DEF SYS_CHAR_PIANO_FA_2        EQU  $11
DEF SYS_CHAR_PIANO_FA_2_SHARP  EQU  $12
DEF SYS_CHAR_PIANO_SOL_2       EQU  $13
DEF SYS_CHAR_PIANO_SOL_2_SHARP EQU  $14
DEF SYS_CHAR_PIANO_LA_2        EQU  $15
DEF SYS_CHAR_PIANO_LA_2_SHARP  EQU  $16
DEF SYS_CHAR_PIANO_SI_2        EQU  $17

DEF SYS_CHAR_LAST_PIANO        EQU (SYS_CHAR_PIANO_SI_2)

; Gap 0x18 - 0x29


; Command Keys  0x2A - 0x2F
DEF SYS_CHAR_SALIDA            EQU  $2A  ; Esc     ; Alias SYS_CHAR_GPAD_START
; Gap 0x2B
DEF SYS_CHAR_BACKSPACE         EQU  $2C
DEF SYS_CHAR_AYUDA             EQU  $2D  ; Help
DEF SYS_CHAR_ENTRA_CR          EQU  $2E  ; Return  ; Alias SYS_CHAR_GPAD_SELECT
DEF SYS_CHAR_PRINTSCREEN       EQU  $2F


; Function keys F1-F11 (Not F12)  0x30 - 0x3A
DEF SYS_CHAR_F1    EQU  $30
DEF SYS_CHAR_F2    EQU  $31
DEF SYS_CHAR_F3    EQU  $32
DEF SYS_CHAR_F4    EQU  $33
DEF SYS_CHAR_F5    EQU  $34
DEF SYS_CHAR_F6    EQU  $35
DEF SYS_CHAR_F7    EQU  $36
DEF SYS_CHAR_F8    EQU  $37
DEF SYS_CHAR_F9    EQU  $38
DEF SYS_CHAR_F10   EQU  $39
DEF SYS_CHAR_F11   EQU  $3A
; DEF SYS_CHAR_F12   EQU  $3B  ; Maybe F12, but also 4C?

DEF SYS_CHAR_FUNCTION_KEYS_START    EQU  (SYS_CHAR_F1)

; Delete Key
DEF SYS_CHAR_BORRAR   EQU  $3C


; Arrow Keys  0x3D - 0x40
DEF SYS_CHAR_UP       EQU  $3D
DEF SYS_CHAR_LEFT     EQU  $3E
DEF SYS_CHAR_RIGHT    EQU  $3F
DEF SYS_CHAR_DOWN     EQU  $40


; Memory and Page Up/Down  0x41 - 0x46
DEF SYS_CHAR_MEMORY_PLUS    EQU  $41
DEF SYS_CHAR_MEMORY_RECALL  EQU  $42
DEF SYS_CHAR_SQRT           EQU  $43
DEF SYS_CHAR_PG_ARRIBA      EQU  $44  ; Page Up    ; Alias SYS_CHAR_GPAD_A
DEF SYS_CHAR_PG_ABAJO       EQU  $45  ; Page Down  ; Alias SYS_CHAR_GPAD_B
DEF SYS_CHAR_MEMORY_MINUS   EQU  $46

; Have not found these usable in applications, but they
; are what the system deliberately translates these
; keys to when SHIFT is used with them
DEF SYS_CHAR_MEMORY_PLUS_SHIFT      EQU  $47
DEF SYS_CHAR_MEMORY_RECALL_SHIFT    EQU  $48



; F12 Key
DEF SYS_CHAR_F12            EQU  $4C


; Gap 0x4D - 0x62


; Special chars, with some gaps
DEF SYS_CHAR_EXCLAMATION    EQU  $63
DEF SYS_CHAR_QUOTE          EQU  $64
; Based on shift key translation code and keyboard location
; SYS_CHAR_DOT should be $65, but for some reason that is mapped
; to $9F just after Comma
; DEF SYS_CHAR_DOT            EQU  $65
DEF SYS_CHAR_DOLLAR         EQU  $66
DEF SYS_CHAR_PERCENT        EQU  $67
DEF SYS_CHAR_AMPERSAND      EQU  $68
DEF SYS_CHAR_SLASH_FORWARD  EQU  $69
DEF SYS_CHAR_PAREN_LEFT     EQU  $6A
DEF SYS_CHAR_PAREN_RIGHT    EQU  $6B
DEF SYS_CHAR_SLASH_BACK     EQU  $6C
; GAP 0x6D
DEF SYS_CHAR_SINGLE_QUOTE   EQU  $6E
DEF SYS_CHAR_ASTERISK       EQU  $6F
; The Up Caret char is apparently the SHIFT alternate
; for the square root key even though it isn't shown
; on the keycap
DEF SYS_CHAR_UP_CARET       EQU  $70


; Gap 0x71 - 0x72


DEF SYS_CHAR_COLON                EQU  $73
DEF SYS_CHAR_PERIOD               EQU  $74
DEF SYS_CHAR_SEMI_COLON           EQU  $75
DEF SYS_CHAR_GREATER_THAN         EQU  $76
DEF SYS_CHAR_LESS_THAN            EQU  $77


; Gap 0x78 - 0x80


; Upper case A-Z  0x81 - 0x9A
DEF SYS_CHAR_A     EQU  $81
DEF SYS_CHAR_B     EQU  $82
DEF SYS_CHAR_C     EQU  $83
DEF SYS_CHAR_D     EQU  $84
DEF SYS_CHAR_E     EQU  $85
DEF SYS_CHAR_F     EQU  $86
DEF SYS_CHAR_G     EQU  $87
DEF SYS_CHAR_H     EQU  $88
DEF SYS_CHAR_I     EQU  $89
DEF SYS_CHAR_J     EQU  $8A
DEF SYS_CHAR_K     EQU  $8B
DEF SYS_CHAR_L     EQU  $8C
DEF SYS_CHAR_M     EQU  $8D
DEF SYS_CHAR_N     EQU  $8E
DEF SYS_CHAR_O     EQU  $8F
DEF SYS_CHAR_P     EQU  $90
DEF SYS_CHAR_Q     EQU  $91
DEF SYS_CHAR_R     EQU  $92
DEF SYS_CHAR_S     EQU  $93
DEF SYS_CHAR_T     EQU  $94
DEF SYS_CHAR_U     EQU  $95
DEF SYS_CHAR_V     EQU  $96
DEF SYS_CHAR_W     EQU  $97
DEF SYS_CHAR_X     EQU  $98
DEF SYS_CHAR_Y     EQU  $99
DEF SYS_CHAR_Z     EQU  $9A


; Gap 0x9B - 0x9C


DEF SYS_CHAR_U_UMLAUT   EQU  $9D
DEF SYS_CHAR_COMMA      EQU  $9E
DEF SYS_CHAR_DOT        EQU  $9f
DEF SYS_CHAR_UNDERSCORE EQU  $A0


; Lower case a-z  0xA1 - 0xBA
DEF SYS_CHAR_A_LOWER     EQU  $A1
DEF SYS_CHAR_B_LOWER     EQU  $A2
DEF SYS_CHAR_C_LOWER     EQU  $A3
DEF SYS_CHAR_D_LOWER     EQU  $A4
DEF SYS_CHAR_E_LOWER     EQU  $A5
DEF SYS_CHAR_F_LOWER     EQU  $A6
DEF SYS_CHAR_G_LOWER     EQU  $A7
DEF SYS_CHAR_H_LOWER     EQU  $A8
DEF SYS_CHAR_I_LOWER     EQU  $A9
DEF SYS_CHAR_J_LOWER     EQU  $AA
DEF SYS_CHAR_K_LOWER     EQU  $AB
DEF SYS_CHAR_L_LOWER     EQU  $AC
DEF SYS_CHAR_M_LOWER     EQU  $AD
DEF SYS_CHAR_N_LOWER     EQU  $AE
DEF SYS_CHAR_O_LOWER     EQU  $AF
DEF SYS_CHAR_P_LOWER     EQU  $B0
DEF SYS_CHAR_Q_LOWER     EQU  $B1
DEF SYS_CHAR_R_LOWER     EQU  $B2
DEF SYS_CHAR_S_LOWER     EQU  $B3
DEF SYS_CHAR_T_LOWER     EQU  $B4
DEF SYS_CHAR_U_LOWER     EQU  $B5
DEF SYS_CHAR_V_LOWER     EQU  $B6
DEF SYS_CHAR_W_LOWER     EQU  $B7
DEF SYS_CHAR_X_LOWER     EQU  $B8
DEF SYS_CHAR_Y_LOWER     EQU  $B9
DEF SYS_CHAR_Z_LOWER     EQU  $BA


; Gap 0xBB - 0xBC


DEF SYS_CHAR_U_UMLAUT_LOWER     EQU  $BD
DEF SYS_CHAR_SPACE              EQU  $BE
DEF SYS_CHAR_QUESTIONMARK  EQU  $BF

DEF SYS_CHAR_LOWERCASE_FIRST    EQU SYS_CHAR_A_LOWER
DEF SYS_CHAR_LOWERCASE_LAST     EQU SYS_CHAR_U_UMLAUT_LOWER



; Numbers  0xC0 - 0xC9
DEF SYS_CHAR_0     EQU  $C0
DEF SYS_CHAR_1     EQU  $C1
DEF SYS_CHAR_2     EQU  $C2
DEF SYS_CHAR_3     EQU  $C3
DEF SYS_CHAR_4     EQU  $C4
DEF SYS_CHAR_5     EQU  $C5
DEF SYS_CHAR_6     EQU  $C6
DEF SYS_CHAR_7     EQU  $C7
DEF SYS_CHAR_8     EQU  $C8
DEF SYS_CHAR_9     EQU  $C9

DEF SYS_CHAR_LAST_NUM        EQU (SYS_CHAR_9)

; Math Keys  0xCa - 0xCE
DEF SYS_CHAR_PLUS               EQU  $CA
DEF SYS_CHAR_MINUS              EQU  $CB
DEF SYS_CHAR_DASH               EQU  (SYS_CHAR_MINUS) ; Shared with Minus
DEF SYS_CHAR_MULTIPLY           EQU  $CC
DEF SYS_CHAR_DIVIDE             EQU  $CD
DEF SYS_CHAR_EQUALS             EQU  $CE


; Gap 0xCD - 0xCF


DEF SYS_CHAR_QUESTIONMARK_FLIPPED       EQU  $D0
DEF SYS_CHAR_EXCLAMATION_FLIPPED        EQU  $D1
DEF SYS_CHAR_LEFT_SQ_BRACKET            EQU  $D2
DEF SYS_CHAR_RIGHT_SQ_BRACKET           EQU  $D3
DEF SYS_CHAR_SHIFTED_A_OVER_LINE        EQU  $D4
DEF SYS_CHAR_N_TILDE                    EQU  $D5


; Gap 0xD6 - 0xDA


DEF SYS_CHAR_O_OVER_LINE                EQU  $DB
DEF SYS_CHAR_N_TILDE_LOWER              EQU  $DC


; TODO: Confirm
DEF SYS_CHAR_NO_DATA_OR_KEY    EQU $FF


; Aliases used by Gamepad -> Keyboard Mapping in var D025
; SELECT seems to be mapped to Enter (instead of START)
DEF SYS_CHAR_GPAD_START        EQU  (SYS_CHAR_SALIDA)
DEF SYS_CHAR_GPAD_SELECT       EQU  (SYS_CHAR_ENTRA_CR)
DEF SYS_CHAR_GPAD_A            EQU  (SYS_CHAR_PG_ARRIBA)
DEF SYS_CHAR_GPAD_B            EQU  (SYS_CHAR_PG_ABAJO)
; for 8-way equivalent input on keyboard
DEF SYS_CHAR_UP_RIGHT          EQU  (SYS_CHAR_PLUS)
DEF SYS_CHAR_DOWN_RIGHT        EQU  (SYS_CHAR_MINUS)
DEF SYS_CHAR_DOWN_LEFT         EQU  (SYS_CHAR_MULTIPLY)
DEF SYS_CHAR_UP_LEFT           EQU  (SYS_CHAR_DIVIDE)

; For Keys 1-9 apply this offset maps them to the
; equivalent SHIFT symbol version of the key
DEF SYS_CHAR_NUM_TO_SHIFT_SYM_OFFSET  EQU  (SYS_CHAR_1 - SYS_CHAR_EXCLAMATION)
